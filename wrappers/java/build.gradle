/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

apply plugin : "java-library" 

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

// Copies the JNI libraries
task copyJniLibraries(type:Exec) {
    workingDir '../../'

    commandLine 'cp', '-r', 'target/release/libpairing_crypto_c.so', 'wrappers/java/src/main/resources/META-INF/native/linux64'
    commandLine 'cp', '-r', 'target/release/libpairing_crypto_jni.so', 'wrappers/java/src/main/resources/META-INF/native/linux64'
}

tasks.named('test') {
    dependsOn copyJniLibraries

    systemProperty "java.library.path", 'build/libs'
    
    // Use JUnit Platform for unit tests.
    useJUnit()

    maxHeapSize = '1G'
    
    // Enable logging output to stderr
    testLogging.showStandardStreams = true
}
